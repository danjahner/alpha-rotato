groups: 
- name: basic-credentials
  jobs: 
  - manual-rotate-basics
  - rotate-certificates
  - rotate-uaa-client-secrets
  - rotate-nats-password
  - rotate-diego-ssh-host-key
  - rotate-router-secrets
  - rotate-cc-secrets
  - rotate-blobstore-secrets
  - rotate-dropsonde-secret
  - deploy-to-rotate-basics
- name: ca-certificates
  jobs: 
  - manual-rotate-cas
  - rotate-cas-p1
  - deploy-to-rotate-cas-p1
  - rotate-cas-p2
  - deploy-to-rotate-cas-p2
  - rotate-cas-p3
  - deploy-to-rotate-cas-p3

resources: 
- name: manual-rotate-basics
  type: time
  source: 
    interval: 1m

- name: manual-rotate-cas
  type: time
  source: 
    interval: 1m

- name: alpha-rotato
  type: git
  source:
    uri: https://github.com/danjahner/alpha-rotato.git
    branch: master

jobs: 
- name: manual-rotate-basics
  plan: 
  - get: manual-rotate-basics
    trigger: false

- name: rotate-certificates
  plan: 
  - get: manual-rotate-basics
    trigger: true
    passed: 
    - manual-rotate-basics
  - get: alpha-rotato
  - task: rotate-credential
    file: alpha-rotato/tasks/rotate-certificates-by-ca.yml
    params:
      CREDHUB_SERVER: ((director-addr)):8844
      CREDHUB_CLIENT: ((dan_director_client.username))
      CREDHUB_SECRET: ((dan_director_client.password))
      CREDHUB_CA_CERT: ((dan_director_gcp_ca.certificate))
      SIGNED_BY_TO_ROTATE:
      - "/dan_director/cf/uaa_ca"
      - "/dan_director/cf/router_ca"
      - "/dan_director/cf/loggregator_ca"
      - "/dan_director/cf/consul_agent_ca"
      - "/dan_director/cf/service_cf_internal_ca"
      - "/dan_director/cf/network_policy_ca"
      - "/dan_director/cf/silk_ca"

- name: rotate-uaa-client-secrets
  plan: 
  - get: manual-rotate-basics
    trigger: true
    passed: 
    - manual-rotate-basics
  - get: alpha-rotato
  - task: rotate-credential
    file: alpha-rotato/tasks/rotate-credentials.yml
    params:
      CREDHUB_SERVER: ((director-addr)):8844
      CREDHUB_CLIENT: ((dan_director_client.username))
      CREDHUB_SECRET: ((dan_director_client.password))
      CREDHUB_CA_CERT: ((dan_director_gcp_ca.certificate))
      CREDS_TO_ROTATE:
      - "/dan_director/cf/uaa_clients_tcp_router_secret"
      - "/dan_director/cf/uaa_clients_tcp_emitter_secret"
      - "/dan_director/cf/uaa_clients_ssh-proxy_secret"
      - "/dan_director/cf/uaa_clients_gorouter_secret"
      - "/dan_director/cf/uaa_clients_doppler_secret"
      - "/dan_director/cf/uaa_clients_cloud_controller_username_lookup_secret"
      - "/dan_director/cf/uaa_clients_cc-service-dashboards_secret"
      - "/dan_director/cf/uaa_clients_cc-routing_secret"
      - "/dan_director/cf/uaa_clients_network_policy_secret"
      - "/dan_director/cf/uaa_clients_cc_service_key_client_secret"
      - "/dan_director/cf/uaa_clients_routing_api_client_secret"
      - "/dan_director/cf/uaa_admin_client_secret"
      - "/dan_director/cf/cf_admin_password"

- name: rotate-nats-password
  plan: 
  - get: manual-rotate-basics
    trigger: true
    passed: 
    - manual-rotate-basics
  - get: alpha-rotato
  - task: rotate-credential
    file: alpha-rotato/tasks/rotate-credentials.yml
    params:
      CREDHUB_SERVER: ((director-addr)):8844
      CREDHUB_CLIENT: ((dan_director_client.username))
      CREDHUB_SECRET: ((dan_director_client.password))
      CREDHUB_CA_CERT: ((dan_director_gcp_ca.certificate))
      CREDS_TO_ROTATE:
      - "/dan_director/cf/nats_password"

- name: rotate-diego-ssh-host-key
  plan: 
  - get: manual-rotate-basics
    trigger: true
    passed: 
    - manual-rotate-basics
  - get: alpha-rotato
  - task: rotate-credential
    file: alpha-rotato/tasks/rotate-credentials.yml
    params:
      CREDHUB_SERVER: ((director-addr)):8844
      CREDHUB_CLIENT: ((dan_director_client.username))
      CREDHUB_SECRET: ((dan_director_client.password))
      CREDHUB_CA_CERT: ((dan_director_gcp_ca.certificate))
      CREDS_TO_ROTATE:
      - "/dan_director/cf/diego_ssh_proxy_host_key"

- name: rotate-router-secrets
  plan: 
  - get: manual-rotate-basics
    trigger: true
    passed: 
    - manual-rotate-basics
  - get: alpha-rotato
  - task: rotate-credential
    file: alpha-rotato/tasks/rotate-credentials.yml
    params:
      CREDHUB_SERVER: ((director-addr)):8844
      CREDHUB_CLIENT: ((dan_director_client.username))
      CREDHUB_SECRET: ((dan_director_client.password))
      CREDHUB_CA_CERT: ((dan_director_gcp_ca.certificate))
      CREDS_TO_ROTATE:
      - "/dan_director/cf/router_route_services_secret"
      - "/dan_director/cf/router_status_password"

- name: rotate-cc-secrets
  plan: 
  - get: manual-rotate-basics
    trigger: true
    passed: 
    - manual-rotate-basics
  - get: alpha-rotato
  - task: rotate-credential
    file: alpha-rotato/tasks/rotate-credentials.yml
    params:
      CREDHUB_SERVER: ((director-addr)):8844
      CREDHUB_CLIENT: ((dan_director_client.username))
      CREDHUB_SECRET: ((dan_director_client.password))
      CREDHUB_CA_CERT: ((dan_director_gcp_ca.certificate))
      CREDS_TO_ROTATE:
      - "/dan_director/cf/cc_bulk_api_password"
      - "/dan_director/cf/cc_staging_upload_password"
      - "/dan_director/cf/cc_internal_api_password"

- name: rotate-blobstore-secrets
  plan: 
  - get: manual-rotate-basics
    trigger: true
    passed: 
    - manual-rotate-basics
  - get: alpha-rotato
  - task: rotate-credential
    file: alpha-rotato/tasks/rotate-credentials.yml
    params:
      CREDHUB_SERVER: ((director-addr)):8844
      CREDHUB_CLIENT: ((dan_director_client.username))
      CREDHUB_SECRET: ((dan_director_client.password))
      CREDHUB_CA_CERT: ((dan_director_gcp_ca.certificate))
      CREDS_TO_ROTATE:
      - "/dan_director/cf/blobstore_secure_link_secret"
      - "/dan_director/cf/blobstore_admin_users_password"

- name: rotate-dropsonde-secret
  plan: 
  - get: manual-rotate-basics
    trigger: true
    passed: 
    - manual-rotate-basics
  - get: alpha-rotato
  - task: rotate-credential
    file: alpha-rotato/tasks/rotate-credentials.yml
    params:
      CREDHUB_SERVER: ((director-addr)):8844
      CREDHUB_CLIENT: ((dan_director_client.username))
      CREDHUB_SECRET: ((dan_director_client.password))
      CREDHUB_CA_CERT: ((dan_director_gcp_ca.certificate))
      CREDS_TO_ROTATE:
      - "/dan_director/cf/dropsonde_shared_secret"

- name: deploy-to-rotate-basics
  plan: 
  - get: manual-rotate-basics
    trigger: true
    passed: 
    - rotate-certificates
    - rotate-uaa-client-secrets
    - rotate-nats-password
    - rotate-diego-ssh-host-key
    - rotate-router-secrets
    - rotate-cc-secrets
    - rotate-blobstore-secrets
    - rotate-dropsonde-secret
  - get: alpha-rotato
  - task: deploy-to-rotate-basics
    file: alpha-rotato/tasks/rotate-deploy.yml
    params:
      BOSH_ENVIRONMENT: ((director-addr))
      BOSH_DEPLOYMENT: cf
      BOSH_CA_CERT: ((dan_director_gcp_ca.certificate))
      BOSH_CLIENT: ((dan_director_client.username))
      BOSH_CLIENT_SECRET: ((dan_director_client.password))

- name: manual-rotate-cas
  plan: 
  - get: manual-rotate-cas
    trigger: false

- name: rotate-cas-p1
  plan: 
  - get: manual-rotate-cas
    trigger: true
    passed: 
    - manual-rotate-cas
  - get: alpha-rotato
  - task: rotate-credential
    file: alpha-rotato/tasks/rotate-cas-part1.yml
    params:
      CREDHUB_SERVER: ((director-addr)):8844
      CREDHUB_CLIENT: ((dan_director_client.username))
      CREDHUB_SECRET: ((dan_director_client.password))
      CREDHUB_CA_CERT: ((dan_director_gcp_ca.certificate))
      CAS_TO_ROTATE:
      - "/dan_director/cf/uaa_ca"
      - "/dan_director/cf/router_ca"
      - "/dan_director/cf/loggregator_ca"
      - "/dan_director/cf/consul_agent_ca"
      - "/dan_director/cf/service_cf_internal_ca"
      - "/dan_director/cf/network_policy_ca"
      - "/dan_director/cf/silk_ca"

- name: deploy-to-rotate-cas-p1
  plan: 
  - get: manual-rotate-cas
    trigger: true
    passed: 
    - rotate-cas-p1
  - get: alpha-rotato
  - task: deploy-to-rotate
    file: alpha-rotato/tasks/rotate-deploy.yml
    params:
      BOSH_ENVIRONMENT: ((director-addr))
      BOSH_DEPLOYMENT: cf
      BOSH_CA_CERT: ((dan_director_gcp_ca.certificate))
      BOSH_CLIENT: ((dan_director_client.username))
      BOSH_CLIENT_SECRET: ((dan_director_client.password))

- name: rotate-cas-p2
  plan: 
  - get: manual-rotate-cas
    trigger: true
    passed: 
    - deploy-to-rotate-cas-p1
  - get: alpha-rotato
  - task: rotate-credential
    file: alpha-rotato/tasks/rotate-certificates-by-ca.yml
    params:
      CREDHUB_SERVER: ((director-addr)):8844
      CREDHUB_CLIENT: ((dan_director_client.username))
      CREDHUB_SECRET: ((dan_director_client.password))
      CREDHUB_CA_CERT: ((dan_director_gcp_ca.certificate))
      SIGNED_BY_TO_ROTATE:
      - "/dan_director/cf/uaa_ca"
      - "/dan_director/cf/router_ca"
      - "/dan_director/cf/loggregator_ca"
      - "/dan_director/cf/consul_agent_ca"
      - "/dan_director/cf/service_cf_internal_ca"
      - "/dan_director/cf/network_policy_ca"
      - "/dan_director/cf/silk_ca"

- name: deploy-to-rotate-cas-p2
  plan: 
  - get: manual-rotate-cas
    trigger: true
    passed: 
    - rotate-cas-p2
  - get: alpha-rotato
  - task: deploy-to-rotate
    file: alpha-rotato/tasks/rotate-deploy.yml
    params:
      BOSH_ENVIRONMENT: ((director-addr))
      BOSH_DEPLOYMENT: cf
      BOSH_CA_CERT: ((dan_director_gcp_ca.certificate))
      BOSH_CLIENT: ((dan_director_client.username))
      BOSH_CLIENT_SECRET: ((dan_director_client.password))

- name: rotate-cas-p3
  plan: 
  - get: manual-rotate-cas
    trigger: true
    passed: 
    - deploy-to-rotate-cas-p2
  - get: alpha-rotato
  - task: rotate-credential
    file: alpha-rotato/tasks/rotate-cas-part3.yml
    params:
      CREDHUB_SERVER: ((director-addr)):8844
      CREDHUB_CLIENT: ((dan_director_client.username))
      CREDHUB_SECRET: ((dan_director_client.password))
      CREDHUB_CA_CERT: ((dan_director_gcp_ca.certificate))
      CAS_TO_ROTATE:
      - "/dan_director/cf/uaa_ca"
      - "/dan_director/cf/router_ca"
      - "/dan_director/cf/loggregator_ca"
      - "/dan_director/cf/consul_agent_ca"
      - "/dan_director/cf/service_cf_internal_ca"
      - "/dan_director/cf/network_policy_ca"
      - "/dan_director/cf/silk_ca"

- name: deploy-to-rotate-cas-p3
  plan: 
  - get: manual-rotate-cas
    trigger: true
    passed: 
    - rotate-cas-p3
  - get: alpha-rotato
  - task: deploy-to-rotate
    file: alpha-rotato/tasks/rotate-deploy.yml
    params:
      BOSH_ENVIRONMENT: ((director-addr))
      BOSH_DEPLOYMENT: cf
      BOSH_CA_CERT: ((dan_director_gcp_ca.certificate))
      BOSH_CLIENT: ((dan_director_client.username))
      BOSH_CLIENT_SECRET: ((dan_director_client.password))

